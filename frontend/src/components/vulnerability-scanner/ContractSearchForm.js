import React, { useState } from 'react';
import { 
  Box, 
  FormControl, 
  FormLabel, 
  Input, 
  Button, 
  InputGroup, 
  InputRightElement,
  FormHelperText,
  useToast
} from '@chakra-ui/react';
import { FaSearch } from 'react-icons/fa';

const ContractSearchForm = ({ onScanContract, isDisabled }) => {
  const [contractAddress, setContractAddress] = useState('');
  const [isValidAddress, setIsValidAddress] = useState(true);
  const toast = useToast();
  
  const validateEthereumAddress = (address) => {
    // Basic Ethereum address validation (0x followed by 40 hex characters)
    return /^0x[a-fA-F0-9]{40}$/.test(address);
  };
  
  const handleInputChange = (e) => {
    const value = e.target.value;
    setContractAddress(value);
    
    if (value === '' || validateEthereumAddress(value)) {
      setIsValidAddress(true);
    } else {
      setIsValidAddress(false);
    }
  };
  
  const handleSubmit = (e) => {
    e.preventDefault();
    
    if (!contractAddress) {
      toast({
        title: 'Address Required',
        description: 'Please enter a contract address to scan.',
        status: 'warning',
        duration: 3000,
        isClosable: true,
      });
      return;
    }
    
    if (!validateEthereumAddress(contractAddress)) {
      toast({
        title: 'Invalid Address',
        description: 'Please enter a valid Ethereum contract address.',
        status: 'error',
        duration: 3000,
        isClosable: true,
      });
      return;
    }
    
    onScanContract(contractAddress);
  };
  
  return (
    <Box as="form" onSubmit={handleSubmit}>
      <FormControl isInvalid={!isValidAddress}>
        <FormLabel>Contract Address</FormLabel>
        <InputGroup>
          <Input
            placeholder="0x..."
            value={contractAddress}
            onChange={handleInputChange}
            isDisabled={isDisabled}
          />
          <InputRightElement width="4.5rem">
            <Button 
              h="1.75rem" 
              size="sm" 
              colorScheme="blue"
              type="submit"
              isDisabled={isDisabled || !isValidAddress || !contractAddress}
              leftIcon={<FaSearch />}
            >
              Scan
            </Button>
          </InputRightElement>
        </InputGroup>
        {!isValidAddress && (
          <FormHelperText color="red.500">
            Please enter a valid Ethereum address (0x followed by 40 hex characters)
          </FormHelperText>
        )}
        <FormHelperText>
          Enter a smart contract address to scan for vulnerabilities
        </FormHelperText>
      </FormControl>
    </Box>
  );
};

export default ContractSearchForm; 